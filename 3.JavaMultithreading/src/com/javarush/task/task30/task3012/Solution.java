package com.javarush.task.task30.task3012;

/* 
Получи заданное число
*/

public class Solution {
    public static void main(String[] args) {
        Solution solution = new Solution();
         solution.createExpression(74);
      //  solution.createExpression(1234);


       // System.out.println(Integer.toString(74, 3));//2202
       // System.out.println(Character.getNumericValue('2'));
    }

    public void createExpression(int number) {
        //напишите тут ваш код
        StringBuilder result = new StringBuilder();
     StringBuilder numberString3= new StringBuilder(  Integer.toString(number, 3));//1200201
        String numberString3Reverse = numberString3.reverse().toString();
        boolean plusOdin=false;
         for(int i=0;i<numberString3.length();i++){
             int c = Character.getNumericValue(numberString3Reverse.charAt(i));
             if (plusOdin)
                 c++;
             if (c==3){
                 c=0;
                 plusOdin=true;
             }
            if (c==2){

                result.append(" - ").append((int)Math.pow(3,i));
                plusOdin=true;
                if (i==numberString3.length()-1){
                    result.append(" + ").append((int)Math.pow(3,i+1));
                }
            }
             if (c==0) {
               //  result.append("+0");
                 if (plusOdin){
                     result.append(" + ").append((int)Math.pow(3,i+1));
                 }
                 plusOdin=false;
             }
             if (c==1) {
                 result.append(" + ").append((int) Math.pow(3, i));
                 plusOdin=false;
             }
         }
         System.out.println(number+" = "+result);
    }
}
/*Получи заданное число
Реализуй метод createExpression(int number).
Метод createExpression вызывается с одним параметром number. Этот параметр - число от 1 до 3000 включительно.
Нужно вывести арифметическое выражение, результатом которого является число number.
Можно использовать числа: 1, 3, 9, 27, 81, 243, 729, 2187 не более, чем по одному разу.
Можно использовать знаки: "+" и "-" любое количество раз.
Обрати внимание, что перед каждым числом в искомой строке обязательно должен быть знак плюс или минус.
Перед выражением выведи [переданное число] =. (Смотри примеры вывода ниже).
------2   0  9*2 27*2     2 18   54   =74
Исходное число (в десятичной системе) делим на 3.
Если остаток от деления равен 2, то к результату добавляем +1.
Если результат от деления больше 2, — выполняем его деление на 3.
Пункты 2, 3 выполняем до тех пор пока не получим результат от деления меньше 3 (см. п.3).
После выполнения процедур сначала выписываем результат от последнего деления, при этом если результат равен двум то его выписываем как +-,
затем выписываем остатки от предыдущих операций, так что первый остаток от деления был выписан последним (то есть выписываем снизу вверх),
 при этом все остатки равные двум выписываются как значение - (см. п.2, мы делали заём из остатка в результат).
Значения равные 1 выписываются как +, 0 оставляем как есть (0 и в троичной системе 0).
---------
Пример1:
Переданное число:
74
Ожидаемый вывод:
74 = - 1 + 3 - 9 + 81

Пример2:
Переданное число:
1234
Ожидаемый вывод:
1234 = + 1 - 9 + 27 - 243 - 729 + 2187

При выводе выражения используй числа ТОЛЬКО В ВОЗРАСТАЮЩЕМ порядке!
Переданное число:
2
Ожидаемый вывод:
2 = - 1 + 3 //правильно
Ожидаемый вывод:
2 = + 3 - 1 //НЕ правильно
Метод main не участвует в тестировании.

Подсказка:
Почитай в интернете про троичную симметричную систему счисления.


Требования:
1. В начале строчки вывода должно быть расположено число, которое передано в метод createExpression в качестве параметра и знак "=".
2. В выражении можно использовать только числа: 1, 3, 9, 27, 81, 243, 729, 2187 не более, чем по одному разу.
3. В выражении можно использовать только знаки "+" и "-" любое количество раз.
4. Метод createExpression должен быть реализован согласно условию.*/